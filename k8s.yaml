apiVersion: apps/v1
kind: Deployment
metadata:
  name: bulletinboards-reviews-deployment
spec:
  replicas: 3
  selector:
    matchLabels:
      app: reviews
      component: bulletinboard-pod
  template:
    metadata:
      labels:
        app: reviews
        component: bulletinboard-pod
    spec:
      containers:
      - name: bulletinboard-reviews
        image: registry.ingress.cnb2.cnb.shoot.canary.k8s-hana.ondemand.com/bulletinboard-reviews-node:latest
        imagePullPolicy: IfNotPresent
        readinessProbe:
          httpGet:
            path: /health
            port: 9090
          initialDelaySeconds: 3
          periodSeconds: 2
        ports:
        - containerPort: 9090
        env:
        - name: POSTGRES_URI
          value: postgres://postgres@postgres-reviews:5432/postgres
        - name: PORT
          value: '9090'
      imagePullSecrets:
        - name: internal-registry
      initContainers:
        - name: check-db-ready
          image: postgres:9.6-alpine
          command: ['sh', '-c',
            'until pg_isready -h postgres-reviews -p 5432 -U postgres;
            do echo waiting for database; sleep 2; done;']
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: bulletinboard-reviews-ingress
spec:
  rules:
  - host: bb-reviews.ingress.cnb2.cnb.shoot.canary.k8s-hana.ondemand.com 
    http:
      paths:
      - path: /
        backend:
          serviceName: reviews-service
          servicePort: 9090
---
apiVersion: v1
kind: Service
metadata:
  name: reviews-service
spec:
  selector:
    app: reviews
    component: bulletinboard-pod
  ports:
  - port: 9090
    targetPort: 9090
  type: LoadBalancer
---
apiVersion: v1
kind: Service
metadata:
  name: postgres-reviews
spec:
  selector:
    app: reviews
    component: postgres
  ports:
  - port: 5432
    targetPort: 5432
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgres-reviews-stateful-set
spec:
  serviceName: postgres-reviews
  selector:
    matchLabels:
      app: reviews
      component: postgres
  template:
    metadata:
      labels:
        app: reviews
        component: postgres
    spec:
      containers:
      - name: postgres
        image: postgres:9.6-alpine
        ports:
        - containerPort: 5432
        volumeMounts:
        - name: storage
          mountPath: /data/db
  volumeClaimTemplates:
    - metadata:
        name: storage
      spec:
        accessModes: [ "ReadWriteOnce" ]
        resources:
          requests:
            storage: 256Mi
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: reviews-db-policy
spec:
  podSelector:
    matchLabels:
      app: reviews
      component: postgres
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    - podSelector:
        matchLabels:
          app: reviews
          component: bulletinboard-pod
    ports:
    - port: 5432
  egress: []
---
  apiVersion: networking.k8s.io/v1
  kind: NetworkPolicy
  metadata:
    name: reviews-svc-policy
  spec:
    podSelector:
      matchLabels:
        app: reviews
        component: bulletinboard-pod
    policyTypes:
    - Ingress
    - Egress
    ingress:
    - from:
      - podSelector:
          matchLabels:
            app: ads
            component: bulletinboard-pod
      - podSelector:
          matchLabels:
            app: nginx-ingress
        namespaceSelector:
          matchLabels:
            name: kube-system
      ports:
      - port: 9090
    egress:
    - to:
      - podSelector:
          matchLabels:
            app: reviews
            component: postgres
      ports:
      - port: 5432
    - to:
      - namespaceSelector:
          matchLabels:
            name: kube-system